/******************** LQ_K60_函数库 v1.0 ********************
 * 文件名           ：ADC.H
 * 功能             ：设置ADC工作模式
 * 备注             ：官方例程上修改
 * 日期             ：2015-10-16
 * 实验平台         ：龙丘 k60DN512Z核心板 
 * 作者             ：龙丘技术 006
 * 淘宝店           ：https://longqiu.taobao.com
 * 龙丘智能车讨论群 ：202949437
*************************************************************/
#ifndef __ADC_H__
#define __ADC_H__ 

/* KV58 有一个 ADC16模块， 最高16Bit 速度相比高速ADC稍慢 注意AB通道不能同时使用 */
typedef enum
{
  //参考手册p910 40.1.3.1 ADC0 Channel Assignment for 144-Pin Package
  // -------------------------------ADC0 20181218确认-------------------------       
  ADC0_DP0=0,    //ADC0_SE0
  ADC0_DP1=1,    //PTE16  
  ADC0_DP2=2,    //PTE4    
  ADC0_DP3=3,    //PTE11  
  //ADC0_CFG2 &=~ADC_CFG2_MUXSEL_MASK   0选择a  0 ADxxa channels are selected.
  ADC0_SE4a=4,   //PTE6      
  ADC0_SE5a=5,   //PTE18      
  ADC0_SE6a=6,   //PTE19      
  ADC0_SE7a=7,   //HSADC0A_CH6
  //ADC0_CFG2 |=ADC_CFG2_MUXSEL_MASK    1选择b  1 ADxxb channels are selected.
  ADC0_SE4b=12,  //HSADC0A_CH7 
  ADC0_SE5b=13,  //PTE20  
  ADC0_SE6b=14,  //PTB4  
  ADC0_SE7b=15,  //PTB5    
  
  ADC0_SE8=8,    //ADC0_SE8 
  ADC0_SE9=9,    //PTE17  
  ADC0_SE10=10,  //PTE5 
  ADC0_SE11=11,  //PTE12 
} ADCn_Ch_e;

//精度位数
typedef enum ADC0_nbit
{
  ADC_8bit   = 0x00,
  ADC_10bit  = 0x02,
  ADC_12bit  = 0x01,
  ADC_16bit  = 0x03
}ADC0_nbit;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/**************************************************************************************************************************
                                                    ADC模块函数
**************************************************************************************************************************/
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/*------------------------------------------------------------------------------------------------------
【函    数】ADC_16Init
【功    能】初始化ADC16模式
【参    数】无
【返 回 值】无
【实    例】ADC_Init(); //初始化ADC16模块
【注意事项】
--------------------------------------------------------------------------------------------------------*/
void ADC_Init(void);



/*------------------------------------------------------------------------------------------------------
【函    数】ADC_Start
【功    能】启动ADC转换
【参    数】adc_ch：  ADC通道编号 
【参    数】bit   ：  精度选择ADC_8bit，ADC_12bit，ADC_10bit，ADC_16bit
【返 回 值】无
【实    例】ADC_Init(ADC0_SE8,ADC_12bit,1); //通道编号为 ADC0_SE8的引脚
【注意事项】使用前应初始化对应ADC模块
--------------------------------------------------------------------------------------------------------*/
void ADC_Start(ADCn_Ch_e adc_ch, ADC0_nbit bit);



/*------------------------------------------------------------------------------------------------------
【函    数】ADC_Once
【功    能】启动ADC转换 获取一次ADC转换值
【参    数】adc_ch：  ADC通道编号 
【参    数】bit   ：  精度选择ADC_8bit，ADC_12bit，ADC_10bit，ADC_16bit
【返 回 值】无
【实    例】ADC_Once(ADC0_SE8,ADC_12bit,1) 通道编号为 ADC0_SE8的引脚，进行一次ADC转换。
【注意事项】
--------------------------------------------------------------------------------------------------------*/
uint16_t ADC_Once(ADCn_Ch_e adc_ch, ADC0_nbit bit);



/*------------------------------------------------------------------------------------------------------
【函    数】ADC_Mid
【功    能】进行ADC3次转换取中间值
【参    数】adc_ch：  ADC通道编号 
【参    数】bit   ：  精度选择ADC_8bit，ADC_12bit，ADC_10bit，ADC_16bit
【返 回 值】中值
【实    例】ADC_Mid(2,ADC0_SE8,ADC_12bit) 通道编号为 ADC0_SE8的引脚，进行3次ADC转换，选取中间值返回。
【注意事项】
--------------------------------------------------------------------------------------------------------*/
uint16_t ADC_Mid(ADCn_Ch_e adc_ch,ADC0_nbit bit); //中值滤波



/*------------------------------------------------------------------------------------------------------
【函    数】ADC_Ave
【功    能】进行ADC3次转换取中间值 
【参    数】adc_ch：  ADC通道编号 
【参    数】bit   ：  精度选择ADC_8bit，ADC_12bit，ADC_10bit，ADC_16bit
【参    数】N     :   均值滤波次数（1~65535）
【返 回 值】平均值
【实    例】ADC_Ave(1,ADC0_SE8,ADC_12bit,100) 通道编号为 ADC0_SE8的引脚，进行100次ADC转换，计算出平均值返回。   
【注意事项】
--------------------------------------------------------------------------------------------------------*/
uint16_t ADC_Ave(ADCn_Ch_e adc_ch,ADC0_nbit bit,uint16_t N); //均值滤波




#endif /* __MK60_ADC16_H__ */
